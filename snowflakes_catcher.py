import turtleimport randomimport mathimport pygamepygame.mixer.init()pygame.mixer.music.load("SaintNicholas.mp3")pygame.mixer.music.play()BLACK = (0, 0, 0)WHITE = (255, 255, 255)RED   = (255, 0, 0)snow_colors = ['WHITE', '#57f3c7', '#63f1fb', '#63b3fb', '#638afb', '#7363fb', '#220dff']wn = turtle.Screen()                                    # my screenwn.title("SNOWFLAKES CATCHER")wn.bgcolor(BLACK)wn.tracer(2)                                            # screen is not drawing every time and works much faster"""BORDER of PLAYGROUND"""my_liner = turtle.Turtle()                              # call my turtlemy_liner.color("WHITE")my_liner.penup()my_liner.setposition(-300, -300)my_liner.pendown()my_liner.pensize(2)for side in range(4):    my_liner.forward(600)    my_liner.left(90)my_liner.hideturtle()"""SKY FULL OF STARS: """my_hand = turtle.Turtle()my_hand.color("WHITE")my_hand.pensize(1)my_hand.hideturtle()"""DRAW STARS: """def stars():    my_hand.color(random.choice(snow_colors))    for i in range(5):        my_hand.forward(10)        my_hand.right(144)"""NUMBER OF STARS: """for i in range(200):    x = random.randint(-750,750)    y = random.randint(-400,400)    stars()    my_hand.up()    my_hand.goto(x, y)    my_hand.down()"""Merry Christmas!"""my_pen = turtle.Turtle()                              # call my turtlemy_pen.color("RED")my_pen.penup()my_pen.hideturtle()my_pen.pensize(2)my_pen.setposition(-290, 310)my_pen.pendown()my_pen.write("Merry Christmas and Happy New Year!", align="left", font=("Arial", 18, "bold"))"""CREATE SPRITES: """turtle.register_shape('x.gif')turtle.register_shape('santa.gif')for x in snow_colors:    turtle.register_shape(f"x_{x}.gif")"""CREATE A SNOWBALL TO THROW: """snowball = turtle.Turtle()#snowball.color("WHITE")snowball.shape("santa.gif")snowball.penup()snowball.speed(0)"""DISPLAY SCORE: """score = 0"""CREATE MULTIPLE TARGETS: """                                  # тут у мене сніжинкиmaxTargets = 12targets = []for count in range(maxTargets):    targets.append(turtle.Turtle())    #targets[count].color("RED")    targets[count].shape(f"x_{random.choice(snow_colors)}.gif")    targets[count].penup()    targets[count].speed(0)    targets[count].setposition(random.randint(-300, 300), random.randint(-300, 300))"""SPEED: """speed = 1"""FUNCTIONS: """def turnleft():    snowball.left(30)def turnright():    snowball.right(30)def increasespeed():    global speed    speed += 1def isCollision(t1,t2):    d = math.sqrt(math.pow(t1.xcor() - t2.xcor(),2) + math.pow(t1.ycor() - t2.ycor(),2))    if d < 20:        return True    else:        return False"""KEYS: """turtle.listen()turtle.onkey(turnleft, "Left")turtle.onkey(turnright, "Right")turtle.onkey(increasespeed, "Up")while True:    snowball.forward(speed)    """border check"""    if snowball.xcor() > 300 or snowball.xcor() < -300:        snowball.right(180)    if snowball.ycor() > 300 or snowball.ycor() < -300:        snowball.right(180)    """move target"""    for count in range(maxTargets):        targets[count].forward(1)        """border check"""        if targets[count].xcor() > 300 or targets[count].xcor() < -300:                                # 290            targets[count].right(180)        if targets[count].ycor() > 300 or targets[count].ycor() < -300:            targets[count].right(180)        """collision check"""        if isCollision(snowball, targets[count]):            targets[count].setposition(random.randint(-300, 300), random.randint(-300, 300))  # now target object appears randomly            targets[count].right(random.randint(0, 360))            score += 1                                                                               # display score on screen            my_liner.undo()            my_liner.penup()            my_liner.hideturtle()            my_liner.setposition(210, 310)            scorestring = "Score: %s" %score            my_liner.write(scorestring, False, align="left", font=("Arial", 14, "normal"))delay = raw_input("Enter to finish")